#!/usr/bin/env python3
"""
Updated National Park Sentiment Analysis Dashboard Launcher

- Added dependency resolution for Python 3.12
- Improved environment setup
- Enhanced error handling
"""

import os
import subprocess
import sys
import time
import webbrowser
from pathlib import Path

def check_system_dependencies():
    """Check for required system packages."""
    try:
        import lxml  # Requires libxml2 and libxslt
    except ImportError:
        print("‚ùå Missing system dependencies. Install with:")
        print("sudo apt-get install libxml2-dev libxslt-dev python3.12-dev")
        return False
    return True

def install_python_dependencies():
    """Install Python packages using uv for faster installation."""
    try:
        subprocess.run([
            sys.executable, "-m", "uv", "pip", "install",
            "-r", "requirements.txt"
        ], check=True)
        return True
    except subprocess.CalledProcessError:
        print("‚ö†Ô∏è Falling back to standard pip installation...")
        try:
            subprocess.run([
                sys.executable, "-m", "pip", "install",
                "-r", "requirements.txt"
            ], check=True)
            return True
        except subprocess.CalledProcessError as e:
            print(f"‚ùå Installation failed: {str(e)}")
            return False

# ... (rest of the functions remain similar with updated version checks)

def main():
    """Main execution flow with improved dependency handling."""
    print("=" * 80)
    print("National Park Sentiment Analysis Dashboard - Enhanced Setup")
    print("=" * 80)
    
    if not check_system_dependencies():
        return 1
    
    print("\nüîß Installing Python dependencies...")
    if not install_python_dependencies():
        return 1
    
    # ... (rest of main function remains similar)

if __name__ == "__main__":
    sys.exit(main())
